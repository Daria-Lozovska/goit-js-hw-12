import{a as w,i as c,S as E}from"./assets/vendor-tnUJPedx.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function n(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(e){if(e.ep)return;e.ep=!0;const s=n(e);fetch(e.href,s)}})();const b="47376168-762e2e3775122625ea22809a6",q="https://pixabay.com/api/";async function p(r,t=1,n=15){try{return(await w.get(q,{params:{key:b,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:n}})).data}catch{throw new Error("Failed to fetch images")}}const S=r=>{r.innerHTML=""},g=(r,t)=>{const n=r.map(({webformatURL:i,largeImageURL:e,tags:s,likes:l,views:y,comments:L,downloads:v})=>`
    <a href="${e}" class="gallery__item">
      <div class="photo-card">
        <img src="${i}" alt="${s}" loading="lazy" />
        <div class="info">
          <li><h3>Likes</h3> <p>${l}</p></li>
          <li><h3>Views</h3> <p>${y}</p></li>
          <li><h3>Comments</h3> <p>${L}</p></li>
          <li><h3>Downloads</h3> <p>${v}</p></li>
        </div>
      </div>
    </a>
  `).join("");t.insertAdjacentHTML("beforeend",n)},$=document.querySelector("#search-form"),u=document.querySelector(".gallery"),o=document.querySelector(".loader"),a=document.querySelector(".load-more");let h="",d=1,m=0,f;$.addEventListener("submit",async r=>{if(r.preventDefault(),h=r.target.elements.searchQuery.value.trim(),!h){c.error({title:"Error",message:"Please enter a search query!"});return}d=1,S(u),o.classList.remove("is-hidden"),a.classList.add("is-hidden");try{const t=await p(h,d);if(m=t.totalHits,t.hits.length===0){c.warning({title:"No results",message:"No images found!"}),o.classList.add("is-hidden");return}g(t.hits,u),f=new E(".gallery a"),f.refresh(),o.classList.add("is-hidden"),a.classList.toggle("is-hidden",t.hits.length>=m)}catch(t){c.error({title:"Error",message:t.message}),o.classList.add("is-hidden")}});a.addEventListener("click",async()=>{d+=1,o.classList.remove("is-hidden"),a.classList.add("is-hidden");try{const r=await p(h,d);g(r.hits,u),f.refresh(),d*15>=m?(c.info({title:"End of results",message:"You've reached the end of the search results."}),a.classList.add("is-hidden")):a.classList.remove("is-hidden");const t=u.querySelector(".photo-card").getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"})}catch(r){c.error({title:"Error",message:r.message})}finally{o.classList.add("is-hidden")}});
//# sourceMappingURL=index.js.map
